1.create database first_assignment


2.Connect to that database.:psql first_assignment


3.Create a table called products with columns for:
id, which should be a unique auto-incremementing integer
name, which should be text, and not nullable
price, which should be numeric, and greater than zero
can_be_returned, which should be a boolean, and not nullable:


Create TABLE products (id SERIAL PRIMARY KEY,
                      name VARCHAR(50) NOT NULL,
                      price REAL CHECK>0,
                      can_be_returned BOOLEAN NOT NULL );

4.Add a product to the table with the name of "chair", price of 44.00, and can_be_returned of false.
INSERT INTO PRODUCTS (name,price,can_be_returned) VALUES("chair",44.00,false)


5.Add a product to the table with the name of "stool", price of 25.99, and can_be_returned of true.
6.Add a product to the table with the name of "table", price of 124.00, and can_be_returned of falsE

INSERT INTO PRODUCTS (name,price,can_be_returned) VALUES("STOOL",25.99,true)
INSERT INTO PRODUCTS (name,price,can_be_returned) VALUES("table",124.99,false)

7.Display all of the rows and columns in the table.
SELECT * FROM   products

8.Display all of the names of the products.
SELECT names from product


9.Display all of the names and prices of the products.
SELECT names,price from product

10.Add a new product - make up whatever you would like!
INSERT INTO PRODUCTS (name,price,can_be_returned) VALUES("stool",12.99,true)

11.Display only the products that can_be_returned.
SELECT * FROM products WHERE can_be_returned=true

12.Display only the products that have a price less than 44.00.
SELECT * FROM products WHERE price <44.00

13.Display only the products that have a price in between 22.50 and 99.99.
SELECT* FROM products WHERE price BETWEEN 22.50 AND 99.99

14.There's been a change in company policy, and now all tables are returnable. Update the database accordingly.
UPDATE products SET can_be_returned =true WHERE can_be_returned=false

15.There's a sale going on: Everything is $20 off! Update the database accordingly.
UPDATE products SET price = price -20

16.Because of the sale, everything that costs less than $25 has sold out. Remove all products whose price meets this criteria.
DELETE FROM products WHERE price <= 25

17.And now the sale is over. For the remaining products, increase their price by $20.
UPDATE products set price =price +20

_______________________________________________________________________________





 



